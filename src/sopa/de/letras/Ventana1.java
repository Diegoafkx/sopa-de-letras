/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sopa.de.letras;
import javax.swing.JFileChooser ;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import Estructuras_de_datos.Lista;

/**
 *Codigo que genera la ventana inicial del programa, que a su vez, lee y analiza los datos diccionario.txt
 * @author Diego Arreaza
 */
public class Ventana1 extends javax.swing.JFrame {

    /**
     * retorno contiene un entero el cual es el que verifica si es posible leer/aceder al archivo diccionario.txt 
     */
    
    private int retorno;
    /**
     * Archivo contiene el Archivo de diccionario.txt cuando el usuario lo seleccione
     */
    private File Archivo;
    /**
     * Texto lee el archivo de diccioanrio.txr
     */
    private FileReader Texto;
    /**
     * lector almacena el contenido de Texto para ser legible
     */
    private BufferedReader lector;
    /**
     * Lista de las palabras del diccionario
     */
    private Lista palabras;
    /**
     * Lista de las letras del diccionario
     */
    private Lista Letras;
    
    /**
     *Constructor de la ventana
     * Evita que el usuario pueda mover de posicion la interace
     */
    public Ventana1() {
        this.setUndecorated(true);
        this.setLocationRelativeTo(null);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Search = new javax.swing.JButton();
        Continue = new javax.swing.JButton();
        buscador = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        X = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Search.setBackground(new java.awt.Color(103, 148, 153));
        Search.setForeground(new java.awt.Color(0, 0, 0));
        Search.setText("Buscador");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        jPanel1.add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 90, 30));

        Continue.setBackground(new java.awt.Color(103, 148, 153));
        Continue.setForeground(new java.awt.Color(0, 0, 0));
        Continue.setText("Continuar");
        Continue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinueActionPerformed(evt);
            }
        });
        jPanel1.add(Continue, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, -1, -1));

        buscador.setBackground(new java.awt.Color(255, 255, 255));
        buscador.setForeground(new java.awt.Color(0, 0, 0));
        buscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscadorActionPerformed(evt);
            }
        });
        jPanel1.add(buscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 270, -1));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Ingrese el archivo con el diccionario.");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 300, 30));

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(0, 0, 0));
        jTextArea1.setRows(5);
        jTextArea1.setText("Bienvenido porfavor ingrese el archivo con el diccionario.\nEste se encuentra dentro de la capeta de la aplicacion \ntiene de nombre el archivo \"Diccionario.txt\"");
        jPanel1.add(jTextArea1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 320, 60));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 340, 30));

        X.setBackground(new java.awt.Color(255, 0, 0));
        X.setText("X");
        X.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XActionPerformed(evt);
            }
        });
        jPanel1.add(X, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 50, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/v1.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     *metodo que se activa al hacer click en el boton Search/Buscar
     *Este se encarga de relizar la busqueda del archivo diccionario.txt y guardar la dirrecion en la variable Archivo
     * Se Asina retorno verificador que permite saer si el archivo es acessible
     * Se Asigna Archivo el arechivo diccionar.txt
     * @param evt
     */
    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        JFileChooser Buscador = new JFileChooser();
        Buscador.setDialogTitle("Buscar Archivo");
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("letras","txt"); 
        Buscador.setFileFilter(filter);
        Buscador.setFileSelectionMode(JFileChooser.FILES_ONLY);
        retorno = Buscador.showOpenDialog(this);
        
        if (retorno == JFileChooser.APPROVE_OPTION){
            Archivo = Buscador.getSelectedFile();
            buscador.setText(Archivo.getPath());
            this.setVisible(true);  
        }
    }//GEN-LAST:event_SearchActionPerformed
    
    private void buscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscadorActionPerformed

    
    /**
     *metodo que se activa al hacer click al boton Continue/Siguiente
     *Este es el que se encarga de leer el contenido del archivo y generar las listas palabras y letras con el mismo
     * Se asigna Texto bufer con el contenido del archivo
     * Se asigna lector contenido legile del archivo Texto
     * Este el puente a la siguiente ventana
     * Se asigna palabras Lista con las palaras del diccionario.txt
     * Se asigna letras Lista con las 16 letras del diccionario.txt que conforaran la sopa de letras 
     */
    private void ContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContinueActionPerformed
        // TODO add your handling code here:
        palabras = new Lista();
        Letras = new Lista();
        if (buscador.getText().equals("")){
            buscador.setText("Error. No se a seleccionado el archivo diccionario");
        }else{
            if (retorno == JFileChooser.APPROVE_OPTION){
            try {
                // TODO add your handling code here:
                String Direccion = Archivo.getPath();
                Texto = new FileReader(Direccion);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Ventana1.class.getName()).log(Level.SEVERE, null, ex);
            }    
                    
            lector = new BufferedReader(Texto);
            String cadena;
            try {
                while ((cadena = lector.readLine())!= null){
                    if ((cadena.equals("dic"))== false){

                        if(cadena.equals("/dic")== false){
                                palabras.Insertar(cadena);
                        }else{
                            break;         
                        }
                    }

                }
            } catch (IOException ex) {
                System.getLogger(Ventana1.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            }
            try {
                while ((cadena = lector.readLine())!= null){
                    if(cadena.equals("tab")== false){

                        if(cadena.equals("/tab")== false){
                            String[] aux = cadena.split(",");
                            for (String aux1 : aux) {
                                    Letras.Insertar(aux1);
                            }
                        }else{
                            break;
                        }
                    }
                }
            } catch (IOException ex) { 
                System.getLogger(Ventana1.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            }
            
            }
            this.setVisible(false);
            menu v2 = new menu(this);
        }
    }//GEN-LAST:event_ContinueActionPerformed
    /**
     * metodo que se activa al precionar el boton X
     * Este metodo se encarga de cerrar el programa
     * @param evt 
     */
    private void XActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XActionPerformed
        // TODO add your handling code here:
        dispose();
        System.exit(0);
    }//GEN-LAST:event_XActionPerformed

    /**
     * retorna la lista con las palabras del diccionario
     * @return la lista de palabras del diccionario
     */
    public Lista get_palabras(){
        return palabras; 
    }
    
    /**
     *Este metodo se encarga de agregar las nuevas letras escritas por el usuario al diccionario.txt 
     */
    public void Agregar_palabra_diccionario(){
        try (FileWriter escritor = new FileWriter(Archivo, false)) {
            escritor.write("dic\n");
            for (int i = 0; i < palabras.Tamaño(); i++) {
                escritor.write((String) palabras.Datos(i));
                escritor.write("\n");
            }
            escritor.write("/dic\ntab\n");
            String x = "";
            for (int i = 0; i < Letras.Tamaño(); i++) {
                x = x+Letras.Datos(i)+",";
            }
            escritor.write(x+"\n/tab");
        } catch (IOException ex) {
            Logger.getLogger(Ventana1.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    /**
     * Retorna la lista con las letras del diccionario
     * @return la lista de letras del diccionario
     */
    public Lista get_letras(){    
        return Letras; 
    }

    /**
     *
     * @param args
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ventana1().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Continue;
    private javax.swing.JButton Search;
    private javax.swing.JButton X;
    private javax.swing.JTextField buscador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables


}


